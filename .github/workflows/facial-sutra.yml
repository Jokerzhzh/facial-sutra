# This workflow will do a clean installation of node dependencies, cache/restore them, build the source code and run tests across different versions of node
# For more information see: https://docs.github.com/en/actions/automating-builds-and-tests/building-and-testing-nodejs

# name: Build package

# on:
#   push:
#     branches: ["main"]
#   pull_request:
#     branches: ["main"]

# jobs:
#   build:
#     runs-on: ubuntu-latest

#     steps:
#       - name: Clone repository
#         uses: actions/checkout@v3

#       - uses: pnpm/action-setup@v2
#         with:
#           version: latest

#       - name: Use Node.js lts/Hydrogen
#         uses: actions/setup-node@v3
#         with:
#           node-version: lts/Hydrogen
#           cache: "pnpm"

#       - name: Install dependencies
#         run: pnpm install

#       - name: Build project
#         run: pnpm docs:build

#       - name: Commit docs
#         run: |
#           git config --local user.email "github-actions[bot]@users.noreply.github.com"
#           git config --local user.name "github-actions[bot]"
#           git remote set-url origin https://${{ github.actor }}:${{ secrets.GITHUB_TOKEN }}@github.com/${{ github.repository }}
#           git add .
#           git pull
#           git commit -m "docs: update docs"
#           git push

# Simple workflow for deploying static content to GitHub Pages
name: Build package And Deploy static content to Pages

on:
  # Runs on pushes targeting the default branch
  push:
    branches: ["main"]

  # Allows you to run this workflow manually from the Actions tab
  workflow_dispatch:

# Sets permissions of the GITHUB_TOKEN to allow deployment to GitHub Pages
permissions:
  contents: write
  pages: write
  id-token: write

# Allow only one concurrent deployment, skipping runs queued between the run in-progress and latest queued.
# However, do NOT cancel in-progress runs as we want to allow these production deployments to complete.
concurrency:
  group: "pages"
  cancel-in-progress: false

jobs:
  # Single deploy job since we're just deploying
  Build:
    runs-on: ubuntu-latest

    steps:
      - name: Clone repository
        uses: actions/checkout@v3

      - uses: pnpm/action-setup@v2
        with:
          version: latest

      - name: Use Node.js lts/Hydrogen
        uses: actions/setup-node@v3
        with:
          node-version: lts/Hydrogen
          cache: "pnpm"

      - name: Install dependencies
        run: pnpm install

      - name: Build project
        run: pnpm docs:build

      - name: Deploy to GitHub Pages
        if: success()
        uses: crazy-max/ghaction-github-pages@v2
        with:
          target_branch: github-pages-dist
          build_dir: "./docs"
        env:
          # @see https://docs.github.com/cn/actions/reference/authentication-in-a-workflow#about-the-github_token-secret
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}

      # - name: Commit docs
      #   run: |
      #     git config --local user.email "github-actions[bot]@users.noreply.github.com"
      #     git config --local user.name "github-actions[bot]"
      #     git remote set-url origin https://${{ github.actor }}:${{ secrets.GITHUB_TOKEN }}@github.com/${{ github.repository }}
      #     git add .
      #     git pull
      #     git commit -m "docs: update docs"
      #     git push

  # Deploy:
  #   runs-on: ubuntu-latest

  #   environment:
  #     name: github-pages
  #     url: ${{ steps.deployment.outputs.page_url }}

  #   needs: Build

  #   steps:
  #     - name: Checkout
  #       uses: actions/checkout@v3

  #     - name: Setup Pages
  #       uses: actions/configure-pages@v3

  #     - name: Upload artifact
  #       uses: actions/upload-pages-artifact@v2
  #       with:
  #         # Upload entire repository
  #         path: "./docs"

  #     - name: Deploy to GitHub Pages
  #       id: deployment
  #       uses: actions/deploy-pages@v2
